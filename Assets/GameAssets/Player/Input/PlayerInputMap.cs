//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/GameAssets/Player/Input/PlayerInputMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputMap"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3f09e6a3-51f5-4107-96d4-60e0b0ae5264"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eb591c7c-0f3d-486d-acea-80804e771461"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireHarpoon"",
                    ""type"": ""Button"",
                    ""id"": ""aa80d4fd-ee8d-4409-b4fc-02c693475a30"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FocusHarpoon"",
                    ""type"": ""Button"",
                    ""id"": ""b8545e07-0d14-4c11-96b3-0a45742a7a07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReelHarpoon"",
                    ""type"": ""Button"",
                    ""id"": ""46123ba1-202e-49de-a560-ebd47b8d6d5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""fe01f416-f239-4edd-b4bf-89803f8eebdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterTitleScreen"",
                    ""type"": ""Button"",
                    ""id"": ""a9f23d98-9081-4c63-ad9c-3864b241dd38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""6f7f6f18-ef63-4b55-be4d-bb001b93cedb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f64c41b5-9b3b-4e56-a642-492f123a3132"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e0143a4f-8c47-49df-b7d8-17db3168c38f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""602bfad8-a106-4efe-82c6-74e4287c6677"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""481922af-cde3-48ae-9dd9-a3b35782310b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""421acf00-ea3c-4cb9-9ce0-28c1e8f66230"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""30b55e33-ea3f-421c-ae27-6f49bd3466ee"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireHarpoon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a56680af-279a-4e05-80e3-21fe7f52c577"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusHarpoon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""952a3339-bf6f-45ea-a788-f0715d180342"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusHarpoon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe6eab22-65f6-4bcf-b7c0-fa1f58688e0a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReelHarpoon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc9785c1-07f6-46e5-8895-7ab3d10af51c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3ded611-cc75-46a5-b590-9c955f2d1395"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterTitleScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""547f9354-7d69-49db-9e97-5715f84ccd9e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DebugConsole"",
            ""id"": ""69791357-35db-4132-b6c4-8c6db36b037f"",
            ""actions"": [
                {
                    ""name"": ""OpenCloseConsole"",
                    ""type"": ""Button"",
                    ""id"": ""a91450ca-3443-4b7a-a599-0592de3ef96e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FreeCamMoveRight"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e1b4d9e2-c1f0-4ba9-8762-804963097b48"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FreeCamLookRight"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b6a40698-9dde-4acb-94c6-d9b9851e0858"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6cebaaa5-26f6-4213-880a-9af44203fd38"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenCloseConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Move"",
                    ""id"": ""a6a08539-d924-4f21-b576-6e477a664669"",
                    ""path"": ""3DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6389f561-4576-4010-87cf-06f1c16f4e90"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""86dbc300-ab87-40ed-9b59-074b624036a5"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""43defc72-9534-4f82-a2bb-46c0724bc26a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e7e6617b-5a17-4f8e-bfe7-9c930f151258"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""c70a4c15-d541-4b8d-9dd2-c833fdb5d91f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""afde98fa-348a-42ee-9381-32ae17032ec6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Look"",
                    ""id"": ""ea89932d-ccbe-4640-b741-3c4840fadfad"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreeCamLookRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""51fd6ad9-d019-4646-a605-d4548c86becd"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamLookRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7ed5f78e-0288-4d57-846c-91578586f7fe"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamLookRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b195d9e-1ff3-4670-b3cc-d26ac95940f6"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamLookRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""327ea4ad-a5bb-4783-a055-2f517450e574"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""FreeCamLookRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard and Mouse"",
            ""bindingGroup"": ""Keyboard and Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_FireHarpoon = m_Player.FindAction("FireHarpoon", throwIfNotFound: true);
        m_Player_FocusHarpoon = m_Player.FindAction("FocusHarpoon", throwIfNotFound: true);
        m_Player_ReelHarpoon = m_Player.FindAction("ReelHarpoon", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_EnterTitleScreen = m_Player.FindAction("EnterTitleScreen", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        // DebugConsole
        m_DebugConsole = asset.FindActionMap("DebugConsole", throwIfNotFound: true);
        m_DebugConsole_OpenCloseConsole = m_DebugConsole.FindAction("OpenCloseConsole", throwIfNotFound: true);
        m_DebugConsole_FreeCamMoveRight = m_DebugConsole.FindAction("FreeCamMoveRight", throwIfNotFound: true);
        m_DebugConsole_FreeCamLookRight = m_DebugConsole.FindAction("FreeCamLookRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_FireHarpoon;
    private readonly InputAction m_Player_FocusHarpoon;
    private readonly InputAction m_Player_ReelHarpoon;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_EnterTitleScreen;
    private readonly InputAction m_Player_Interact;
    public struct PlayerActions
    {
        private @PlayerInputMap m_Wrapper;
        public PlayerActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @FireHarpoon => m_Wrapper.m_Player_FireHarpoon;
        public InputAction @FocusHarpoon => m_Wrapper.m_Player_FocusHarpoon;
        public InputAction @ReelHarpoon => m_Wrapper.m_Player_ReelHarpoon;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @EnterTitleScreen => m_Wrapper.m_Player_EnterTitleScreen;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @FireHarpoon.started += instance.OnFireHarpoon;
            @FireHarpoon.performed += instance.OnFireHarpoon;
            @FireHarpoon.canceled += instance.OnFireHarpoon;
            @FocusHarpoon.started += instance.OnFocusHarpoon;
            @FocusHarpoon.performed += instance.OnFocusHarpoon;
            @FocusHarpoon.canceled += instance.OnFocusHarpoon;
            @ReelHarpoon.started += instance.OnReelHarpoon;
            @ReelHarpoon.performed += instance.OnReelHarpoon;
            @ReelHarpoon.canceled += instance.OnReelHarpoon;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @EnterTitleScreen.started += instance.OnEnterTitleScreen;
            @EnterTitleScreen.performed += instance.OnEnterTitleScreen;
            @EnterTitleScreen.canceled += instance.OnEnterTitleScreen;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @FireHarpoon.started -= instance.OnFireHarpoon;
            @FireHarpoon.performed -= instance.OnFireHarpoon;
            @FireHarpoon.canceled -= instance.OnFireHarpoon;
            @FocusHarpoon.started -= instance.OnFocusHarpoon;
            @FocusHarpoon.performed -= instance.OnFocusHarpoon;
            @FocusHarpoon.canceled -= instance.OnFocusHarpoon;
            @ReelHarpoon.started -= instance.OnReelHarpoon;
            @ReelHarpoon.performed -= instance.OnReelHarpoon;
            @ReelHarpoon.canceled -= instance.OnReelHarpoon;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @EnterTitleScreen.started -= instance.OnEnterTitleScreen;
            @EnterTitleScreen.performed -= instance.OnEnterTitleScreen;
            @EnterTitleScreen.canceled -= instance.OnEnterTitleScreen;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // DebugConsole
    private readonly InputActionMap m_DebugConsole;
    private List<IDebugConsoleActions> m_DebugConsoleActionsCallbackInterfaces = new List<IDebugConsoleActions>();
    private readonly InputAction m_DebugConsole_OpenCloseConsole;
    private readonly InputAction m_DebugConsole_FreeCamMoveRight;
    private readonly InputAction m_DebugConsole_FreeCamLookRight;
    public struct DebugConsoleActions
    {
        private @PlayerInputMap m_Wrapper;
        public DebugConsoleActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenCloseConsole => m_Wrapper.m_DebugConsole_OpenCloseConsole;
        public InputAction @FreeCamMoveRight => m_Wrapper.m_DebugConsole_FreeCamMoveRight;
        public InputAction @FreeCamLookRight => m_Wrapper.m_DebugConsole_FreeCamLookRight;
        public InputActionMap Get() { return m_Wrapper.m_DebugConsole; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugConsoleActions set) { return set.Get(); }
        public void AddCallbacks(IDebugConsoleActions instance)
        {
            if (instance == null || m_Wrapper.m_DebugConsoleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DebugConsoleActionsCallbackInterfaces.Add(instance);
            @OpenCloseConsole.started += instance.OnOpenCloseConsole;
            @OpenCloseConsole.performed += instance.OnOpenCloseConsole;
            @OpenCloseConsole.canceled += instance.OnOpenCloseConsole;
            @FreeCamMoveRight.started += instance.OnFreeCamMoveRight;
            @FreeCamMoveRight.performed += instance.OnFreeCamMoveRight;
            @FreeCamMoveRight.canceled += instance.OnFreeCamMoveRight;
            @FreeCamLookRight.started += instance.OnFreeCamLookRight;
            @FreeCamLookRight.performed += instance.OnFreeCamLookRight;
            @FreeCamLookRight.canceled += instance.OnFreeCamLookRight;
        }

        private void UnregisterCallbacks(IDebugConsoleActions instance)
        {
            @OpenCloseConsole.started -= instance.OnOpenCloseConsole;
            @OpenCloseConsole.performed -= instance.OnOpenCloseConsole;
            @OpenCloseConsole.canceled -= instance.OnOpenCloseConsole;
            @FreeCamMoveRight.started -= instance.OnFreeCamMoveRight;
            @FreeCamMoveRight.performed -= instance.OnFreeCamMoveRight;
            @FreeCamMoveRight.canceled -= instance.OnFreeCamMoveRight;
            @FreeCamLookRight.started -= instance.OnFreeCamLookRight;
            @FreeCamLookRight.performed -= instance.OnFreeCamLookRight;
            @FreeCamLookRight.canceled -= instance.OnFreeCamLookRight;
        }

        public void RemoveCallbacks(IDebugConsoleActions instance)
        {
            if (m_Wrapper.m_DebugConsoleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDebugConsoleActions instance)
        {
            foreach (var item in m_Wrapper.m_DebugConsoleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DebugConsoleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DebugConsoleActions @DebugConsole => new DebugConsoleActions(this);
    private int m_KeyboardandMouseSchemeIndex = -1;
    public InputControlScheme KeyboardandMouseScheme
    {
        get
        {
            if (m_KeyboardandMouseSchemeIndex == -1) m_KeyboardandMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard and Mouse");
            return asset.controlSchemes[m_KeyboardandMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnFireHarpoon(InputAction.CallbackContext context);
        void OnFocusHarpoon(InputAction.CallbackContext context);
        void OnReelHarpoon(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnEnterTitleScreen(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IDebugConsoleActions
    {
        void OnOpenCloseConsole(InputAction.CallbackContext context);
        void OnFreeCamMoveRight(InputAction.CallbackContext context);
        void OnFreeCamLookRight(InputAction.CallbackContext context);
    }
}
